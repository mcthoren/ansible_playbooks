# vim:set tabstop=2 softtabstop=2 shiftwidth=2 expandtab:
---

- hosts: all
  gather_facts: yes
  user: root

  tasks:

  - name: set hostname
    hostname:
      name: '{{ inventory_hostname }}'
    tags:
      - hostname

  - name: pull pi user if it's still there
    user:
      name: pi
      state: absent

  - name: pull pi group if it exists
    group:
      name: pi
      state: absent

  - name: add me group
    group:
      name: ghz
      state: present

  - name: add me
    user:
      name: ghz
      uid: 1000
      group: ghz
      groups: adm,dialout,cdrom,sudo,audio,video,plugdev,games,users,input,netdev,gpio,i2c,spi
      shell: /usr/bin/zsh
    when: ansible_os_family == 'Debian'
    tags:
      - user

  - name: add me
    user:
      name: ghz
      uid: 1000
      group: ghz
      groups: adm,dialout,cdrom,audio,video,games,users,input,netdev
      shell: /usr/bin/zsh
    when: ansible_os_family == 'Alpine'
    tags:
      - user

  - name: sort homedir
    user:
      name: ghz
      home: /home/ghz
    when: inventory_hostname in groups['wxps']
    tags:
      - user

  - name: disable wank
    systemd:
      name: '{{ item }}'
      state: stopped
      enabled: no
    with_items:
      # - dbus
      # - dbus.socket
      - ModemManager.service
      - ntp.service
      - avahi-daemon
      - avahi-daemon.socket
      - nfs-client.target
      - remote-fs.target
      - rpcbind.service
      - rsync.service
      - triggerhappy
      - triggerhappy.socket
      # - systemd-timesyncd.service
    ignore_errors: true
    when: ansible_os_family == 'Debian'
    tags:
      - wank

  - name: pull mdns noise
    lineinfile:
      dest: /etc/nsswitch.conf
      regexp: 'hosts:'
      line: 'hosts:		files dns'
    tags:
      - nss

  - name: add figlet hostname to motd
    shell: figlet `hostname -s` > /etc/motd

  - name: add root scripts dir
    file:
      path: /root/scripts
      owner: root
      group: root
      state: directory
      mode: 0755

  # - name: remove old keys
    # authorized_key:
      # user: root
      # state: absent
      # key: '{{ item }}'
    # with_file:
      # - /home/ghz/ansible_playbooks/plates/rsnap_ed25519.pub
      # - /home/ghz/ansible_playbooks/plates/bobble_pi_snaps.pub
      # - /home/ghz/ansible_playbooks/plates/old_iva.pub
      # - /home/ghz/ansible_playbooks/plates/bkfs0_ed25519.pub
    # tags:
      # - keys

  - name: set up root ssh keys
    authorized_key:
      user: root
      state: present
      key: '{{ item }}'
    with_file:
      - /home/ghz/repos/ansible_playbooks/plates/bobble_pi_snaps-20211117.pub
      - /home/ghz/repos/ansible_playbooks/plates/iva_ed25519.pub
      - /home/ghz/repos/ansible_playbooks/plates/bolt_ed25519.pub
      - /home/ghz/repos/ansible_playbooks/plates/dust_ed15519.pub
      - /home/ghz/repos/ansible_playbooks/plates/sand_ed15519.pub
    tags:
      - keys

  - name: set up ghz ssh keys
    authorized_key:
      user: ghz
      state: present
      key: '{{ item }}'
    with_file:
      - /home/ghz/repos/ansible_playbooks/plates/wxps.pub
    tags:
      - keys

  - name: add my keys
    authorized_key:
      user: ghz
      state: present
      key: '{{ item }}'
    with_file:
      - /home/ghz/repos/ansible_playbooks/plates/iva_ed25519.pub
      - /home/ghz/repos/ansible_playbooks/plates/bolt_ed25519.pub
      - /home/ghz/repos/ansible_playbooks/plates/dust_ed15519.pub
      - /home/ghz/repos/ansible_playbooks/plates/sand_ed15519.pub
    when: inventory_hostname in groups['wxps']
    tags:
      - keys

  - name: template (kinda) netcheck script
    template:
      src: /home/ghz/scripts/netcheck
      dest: /root/scripts/netcheck
      owner: root
      group: root
      mode: 0755
    tags:
      - netcheck

  - name: add path to crontab
    cron:
      env: yes
      name: PATH
      value: /bin:/sbin:/usr/bin:/usr/sbin:/usr/local/bin:/usr/local/sbin

  - name: add netcheck cron entry
    cron:
      name: netcheck
      minute: "*/13	"
      hour: "*	"
      day: "*	"
      weekday: "*	"
      month: "*	"
      user: root
      job: "/root/scripts/netcheck"
    when: 0
    tags:
      - cron

#  this has bitten me in the ass when i try to rescue a pie more times than i care to think about
#  - name: turn off hdmi to save power
#    lineinfile:
#      dest: /etc/rc.local
#      insertbefore: 'exit 0'
#      line: /usr/bin/tvservice -o

  - name: allow port 22
    ufw:
      state: enabled
      rule: allow
      port: '22'
      proto: tcp
    when: ansible_os_family == 'Debian'
    tags:
      - fw

  - name: stop spamming our ring buffer
    ufw:
      logging: 'off'
    when: ansible_os_family == 'Debian'
    tags:
      - fw

  # i seem to be using c.utf8 out of the box on alpine here, so... finished.
  - name: sort locales (1/3)
    locale_gen:
      name: en_US.UTF-8
      state: present
    when: ansible_os_family == 'Debian'
    tags:
      - locale

  - name: sort locales (2/3)
    locale_gen:
      name: en_GB.UTF-8
      state: absent
    when: ansible_os_family == 'Debian'
    tags:
      - locale

  - name: sort locales (3/3)
    command: localectl set-locale C.UTF-8
    when: ansible_os_family == 'Debian'
    tags:
      - locale

  # i seem to be using utc out of the box on alpine, soo..... no probs here.
  - name: set timezone to utc
    timezone:
      name: UTC
    when: ansible_os_family == 'Debian'
